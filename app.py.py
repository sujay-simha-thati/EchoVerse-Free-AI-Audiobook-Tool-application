# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Reu2WDrazb4d9NEE6Ume94xN3lW9SK5l
"""



# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# from gtts import gTTS
# import os
# 
# # App settings
# st.set_page_config(page_title="EchoVerse ‚Äì Free Audiobook Creator", layout="centered")
# 
# st.title("üìö EchoVerse ‚Äì Free AI Audiobook Tool")
# st.write("‚ú® 100% Free using **gTTS** (Google Text-to-Speech) ‚Äì no API key required!")
# 
# # Upload text file
# uploaded_file = st.file_uploader("üìÇ Upload a .txt file", type=["txt"])
# 
# # Or paste text directly
# input_text = st.text_area("‚úçÔ∏è Or paste your text here:")
# 
# # Language selector
# lang = st.selectbox(
#     "üåé Choose language:",
#     ["en", "hi", "fr", "es", "de", "it", "pt", "ru", "ja", "zh-cn"]
# )
# 
# # Generate audiobook
# if st.button("üéß Create Audiobook"):
#     if uploaded_file is not None:
#         text = uploaded_file.read().decode("utf-8")
#     else:
#         text = input_text
# 
#     if text.strip() == "":
#         st.warning("‚ö†Ô∏è Please provide some text to convert.")
#     else:
#         # Generate speech
#         tts = gTTS(text=text, lang=lang)
#         filename = "audiobook.mp3"
#         tts.save(filename)
# 
#         # Play + download
#         st.audio(filename)
#         st.success("‚úÖ Audiobook generated successfully!")
#         with open(filename, "rb") as f:
#             st.download_button("‚¨áÔ∏è Download Audiobook", f, file_name="audiobook.mp3")
#

#from pyngrok import ngrok

# Set ngrok authtoken (do this once per runtime)
#ngrok.set_auth_token("31xniORkZTRVih2G1aMVuU0G4jW_85m1qHKdaTAk1fZ4RdPZx")

#public_url = ngrok.connect(8501)
#print("üöÄ EchoVerse is live at:", public_url)
import streamlit as st
from gtts import gTTS
from ibm_watson import TextToSpeechV1
from ibm_cloud_sdk_core.authenticators import IAMAuthenticator
import os

# ---------------- STREAMLIT APP CONFIG ----------------
st.set_page_config(page_title="EchoVerse ‚Äì AI Audiobook Tool", page_icon="üéß")
st.title("üéß EchoVerse ‚Äì AI Audiobook Creator")
st.write("Convert text or `.txt` files into audiobooks in **multiple languages**!")

# ---------------- INPUT SECTION ----------------
text_input = st.text_area("‚úçÔ∏è Enter text below:")
uploaded_file = st.file_uploader("üìÇ Or upload a .txt file", type=["txt"])

file_text = ""
if uploaded_file is not None:
    file_text = uploaded_file.read().decode("utf-8")

final_text = text_input if text_input.strip() else file_text

# ---------------- OPTIONS ----------------
st.subheader("üåç Choose Language & Engine")

engine = st.radio("Select TTS Engine:", ["Google gTTS", "IBM Watson"])

if engine == "Google gTTS":
    language = st.selectbox(
        "Select Language",
        [
            "en",  # English
            "es",  # Spanish
            "fr",  # French
            "de",  # German
            "hi",  # Hindi
            "zh-CN",  # Chinese
            "ja",  # Japanese
        ],
        index=0
    )
else:
    # IBM Watson needs API keys
    ibm_api_key = st.text_input("üîë IBM Watson API Key", type="password")
    ibm_url = st.text_input("üåê IBM Watson URL (from IBM Cloud)")

    voice = st.selectbox(
        "Select IBM Watson Voice",
        [
            "en-US_AllisonV3Voice",
            "en-GB_KateV3Voice",
            "es-ES_EnriqueV3Voice",
            "fr-FR_ReneeV3Voice",
            "de-DE_DieterV3Voice",
            "ja-JP_EmiV3Voice"
        ]
    )

# ---------------- GENERATE AUDIO ----------------
if st.button("üéôÔ∏è Generate Audiobook"):
    if final_text.strip():
        output_path = "audiobook.mp3"

        if engine == "Google gTTS":
            # Google TTS
            tts = gTTS(final_text, lang=language)
            tts.save(output_path)

        else:
            # IBM Watson TTS
            if not ibm_api_key or not ibm_url:
                st.error("‚ö†Ô∏è Please provide IBM Watson API Key and URL.")
                st.stop()

            authenticator = IAMAuthenticator(ibm_api_key)
            tts_service = TextToSpeechV1(authenticator=authenticator)
            tts_service.set_service_url(ibm_url)

            with open(output_path, "wb") as audio_file:
                audio_file.write(
                    tts_service.synthesize(
                        final_text,
                        voice=voice,
                        accept="audio/mp3"
                    ).get_result().content
                )

        # ---------------- OUTPUT ----------------
        st.success("‚úÖ Audiobook generated successfully!")
        audio_file = open(output_path, "rb")
        st.audio(audio_file.read(), format="audio/mp3")

        st.download_button(
            label="‚¨áÔ∏è Download MP3",
            data=open(output_path, "rb"),
            file_name="audiobook.mp3",
            mime="audio/mp3"
        )

    else:
        st.warning("Please enter text or upload a `.txt` file before generating.")
